<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.web.ddentist.mapper.DeskMapper">

	<insert id="insertPatient" parameterType="ptVO">
		<selectKey resultType="String" order="BEFORE" keyProperty="ptNum">
			SELECT TO_CHAR(SYSDATE, 'yyMMdd')
			        || TRIM(TO_CHAR((SELECT NVL(SUBSTR(MAX(PT_NUM), 7), 0) + 1
			                           FROM PATIENT
			                          WHERE PT_NUM LIKE TO_CHAR(SYSDATE, 'yyMMdd') || '%'), '000'))
			  FROM DUAL
		</selectKey>
		INSERT INTO PATIENT (PT_NUM
							,PT_NM
							,PT_BRDT
							,PT_RRNO
							,PT_GEN
							,PT_PHONE
							,PT_ZIP
							,PT_ADDR
							,PT_ADDR_DET
							,PT_MEMO
							,PRVC_PVSN_AGRE_YN
							,SMS_RCPTN_AGRE_YN
							,PT_MRSA_YN
							,PT_PREG_YN
							,PT_REG_DT
							)
					 VALUES (#{ptNum}
							,#{ptNm}
							,#{ptBrdt}
							,#{ptRrno}
							,#{ptGen}
							,#{ptPhone}
							,#{ptZip}
							,#{ptAddr}
							,#{ptAddrDet}
							,#{ptMemo}
							,#{prvcPvsnAgreYn}
							,#{smsRcptnAgreYn}
							,#{ptMrsaYn}
							,#{ptPregYn}
							,SYSDATE
							)
	</insert>
	<update id="updatePatient" parameterType="ptVO">
	    UPDATE PATIENT SET PT_NM = #{ptNm}
		              ,PT_BRDT = #{ptBrdt}
		              ,PT_RRNO = #{ptRrno}
		              ,PT_GEN = #{ptGen}
		              ,PT_PHONE = #{ptPhone}
		              ,PT_ZIP = #{ptZip}
		              ,PT_ADDR = #{ptAddr}
		              ,PT_ADDR_DET = #{ptAddrDet}
		              ,PT_MEMO = #{ptMemo}
		              ,PRVC_PVSN_AGRE_YN = #{prvcPvsnAgreYn}
		              ,SMS_RCPTN_AGRE_YN = #{smsRcptnAgreYn}
		              ,PT_MRSA_YN = #{ptMrsaYn}
		              ,PT_PREG_YN = #{ptPregYn}
		        WHERE PT_NUM = #{ptNum}
	</update>
	
	<select id="searchPatient" parameterType="String" resultType="ptVO">
		SELECT PT_NUM, PT_NM
		  FROM PATIENT 
		 WHERE 1 = 1
		   AND (
		        PT_NUM LIKE '%' || #{keyword} || '%'
		        OR PT_NM LIKE '%' || #{keyword} || '%'
		        OR PT_RRNO LIKE '%' || #{keyword} || '%'
		   )
		 ORDER BY PT_NUM
	</select>
	
	
	<resultMap id="ptMap" type="ptVO">
		<result property="ptNum" column="PT_NUM" />
		<result property="ptNm" column="PT_NM" />
		<result property="ptBrdt" column="PT_BRDT" />
		<result property="ptRrno" column="PT_RRNO" />
		<result property="ptGen" column="PT_GEN" />
		<result property="ptPhone" column="PT_PHONE" />
		<result property="ptZip" column="PT_ZIP" />
		<result property="ptAddr" column="PT_ADDR" />
		<result property="ptAddrDet" column="PT_ADDR_DET" />
		<result property="ptMemo" column="PT_MEMO" />
		<result property="prvcPvsnAgreYn" column="PRVC_PVSN_AGRE_YN" />
		<result property="smsRcptnAgreYn" column="SMS_RCPTN_AGRE_YN" />
		<result property="ptMrsaYn" column="PT_MRSA_YN" />
		<result property="ptPregYn" column="PT_PREG_YN" />
		<result property="ptRegDt" column="PT_REG_DT" />
		<collection property="queInfo" resultMap="queMap" />
	</resultMap>
	
	<select id="selectPatient" parameterType="String" resultMap="ptMap">
		SELECT A.PT_NUM, A.PT_NM, A.PT_BRDT, A.PT_RRNO, A.PT_GEN, A.PT_PHONE, A.PT_ZIP, A.PT_ADDR, A.PT_ADDR_DET, A.PT_MEMO,
		       A.PRVC_PVSN_AGRE_YN, A.SMS_RCPTN_AGRE_YN, A.PT_MRSA_YN, A.PT_PREG_YN, A.PT_REG_DT,
		       B.PT_NUM, B.QUE_REASON, B.QUE_WANT, B.QUE_PHARM,
		       C.CON_NUM, C.PT_NUM, C.CON_NM, C.CON_DET
		  FROM PATIENT A INNER JOIN QUESTIONNAIRE B ON (A.PT_NUM = B.PT_NUM)
		                 LEFT OUTER JOIN UNDERLYING_CONDITION C ON (A.PT_NUM = C.PT_NUM)
		 WHERE A.PT_NUM = #{ptNum}
	</select>
	
	<select id="countCheckupRecord" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM CHECKUP
		 WHERE PT_NUM = #{ptNum}
	</select>
	
	<delete id="deletePatient" parameterType="String">
		DELETE
		  FROM PATIENT
		 WHERE PT_NUM = #{ptNum}
	</delete>
	
	<insert id="insertQue" parameterType="queVO">
		MERGE INTO QUESTIONNAIRE A
		USING DUAL
		ON (A.PT_NUM = #{ptNum})
		WHEN MATCHED THEN
			UPDATE SET QUE_REASON = #{queReason}
					  ,QUE_WANT = #{queWant}
					  ,QUE_PHARM = #{quePharm}
			     WHERE PT_NUM = #{ptNum}
		WHEN NOT MATCHED THEN
			INSERT (PT_NUM, QUE_REASON, QUE_WANT, QUE_PHARM)
			VALUES (#{ptNum}, #{queReason}, #{queWant}, #{quePharm})
	</insert>
	
	<update id="insertUCon" parameterType="List">
		<foreach collection="list" item="uConVO" index="idx" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
			INTO UNDERLYING_CONDITION (CON_NUM, PT_NUM, CON_NM, CON_DET)
							   VALUES (#{idx} + 1, #{uConVO.ptNum}, #{uConVO.conNm}, #{uConVO.conDet})
		</foreach>
	</update>
	
	<resultMap id="queMap" type="queVO">
		<result property="ptNum" column="PT_NUM" />
		<result property="queReason" column="QUE_REASON" />
		<result property="queWant" column="QUE_WANT" />
		<result property="quePharm" column="QUE_PHARM" />
		<collection property="uConList" resultMap="uConMap" />
	</resultMap>
	<resultMap id="uConMap" type="uConVO">
		<result property="conNum" column="CON_NUM" />
		<result property="ptNum" column="PT_NUM" />
		<result property="conNm" column="CON_NM" />
		<result property="conDet" column="CON_DET" />
	</resultMap>
	
	<select id="selectPtQue" parameterType="String" resultMap="queMap">
		SELECT A.PT_NUM, A.QUE_REASON, A.QUE_WANT, A.QUE_PHARM,
		       B.CON_NUM, B.PT_NUM, B.CON_NM, B.CON_DET
		  FROM QUESTIONNAIRE A LEFT OUTER JOIN UNDERLYING_CONDITION B ON (A.PT_NUM = B.PT_NUM)
		 WHERE A.PT_NUM = #{ptNum}
	</select>
	
	<select id="checkUConCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM UNDERLYING_CONDITION
		 WHERE PT_NUM = #{ptNum}
	</select>
	
<!-- 	<update id="updateQue" parameterType="queVO"> -->
<!-- 		UPDATE QUESTIONNAIRE SET QUE_REASON = #{queReason} -->
<!-- 								,QUE_WANT = #{queWant} -->
<!-- 								,QUE_PHARM = #{quePharm} -->
<!-- 						   WHERE PT_NUM = #{ptNum} -->
<!-- 	</update> -->
	
	<delete id="resetUCon" parameterType="String">
		DELETE
		  FROM UNDERLYING_CONDITION
		 WHERE PT_NUM = #{ptNum}
	</delete>
	
</mapper>
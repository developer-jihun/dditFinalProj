<%@ page language="java" contentType="text/html; charset=utf-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<style>
.dropdown-item{
	cursor: pointer;
}
</style>
<h2>직원 페이지입니다.</h2>
<p>환영합니다, ${pageContext.request.userPrincipal.name}님!</p>
<div class="container">
	<div class="dropdown">
		<input type="text" class="form-control" id="ptSearch" placeholder="환자 검색" onkeyup="searchPatient(this);" />
		<ul id="ptSearchDropdown" class="dropdown-menu">
	  	</ul>
	</div>
</div>
<hr />
<div class="container">
	<div class="row g-2">
		<div class="col-sm-2">
			<button type="button" class="btn btn-warning btn-block" id="openQuesBtn" onclick="selectPtQue();" disabled>문진표</button>
		</div>
		<div class="col-sm-10">
			<input type="text" class="form-control-plaintext" id="medicalAlerts" readonly />
		</div>
	</div>
	<form name="patientForm" action="/hospital/desk/insertPatient">
		<div class="form-group">
			<label class="form-label">환자 번호</label>
			<input type="text" class="form-control" name="ptNum" readonly />
		</div>
		<div class="form-group">
			<label class="form-label">환자 명</label>
			<input type="text" class="form-control" name="ptNm" />
		</div>
		<div class="form-group">
			<label class="form-label">생년월일</label>
			<input type="text" class="form-control" name="ptBrdt" readonly />
		</div>
		<div class="form-group">
			<label class="form-label">주민등록번호</label>
			<div class="row">
				<div class="col-sm-6">
					<input type="text" class="form-control" name="ptRrno1" />
				</div>
				<div class="col-sm-6">
					<input type="text" class="form-control" name="ptRrno2" />
				</div>
			</div>
		</div>
		<div class="form-group">
			<label class="form-label">성별</label>
			<input type="text" class="form-control" name="ptGen" readonly />
		</div>
		<div class="form-group">
			<label class="form-label">연락처</label>
			<input type="text" class="form-control" name="ptPhone" />
		</div>
		<div class="form-group">
			<label class="form-label">우편번호</label>
			<input type="text" class="form-control" name="ptZip" />
		</div>
		<div class="form-group">
			<label class="form-label">주소</label>
			<input type="text" class="form-control" name="ptAddr" />
		</div>
		<div class="form-group">
			<label class="form-label">상세 주소</label>
			<input type="text" class="form-control" name="ptAddrDet" />
		</div>
		<div class="form-group">
			<label class="form-label">메모</label>
			<input type="text" class="form-control" name="ptMemo" />
		</div>
		<div class="form-check">
			<label class="form-check-label">개인정보 제공 동의여부</label>
			<input type="checkbox" class="form-check-input" name="prvcPvsnAgreYn" value="Y" />
		</div>
		<div class="form-check">
			<label class="form-check-label">문자서비스 수신여부</label>
			<input type="checkbox" class="form-check-input" name="smsRcptnAgreYn" value="Y" />
		</div>
		<div class="form-check">
			<label class="form-check-label">진료 기록 정보 공유 동의여부</label>
			<input type="checkbox" class="form-check-input" name="ptMrsaYn" value="Y" />
		</div>
		<div class="form-check">
			<label class="form-check-label">임신 여부</label>
			<input type="checkbox" class="form-check-input" name="ptPregYn" value="Y" />
		</div>
		<div class="d-flex justify-content-between">
			<div>
				<button type="button" class="btn btn-success" onclick="insertPatient();">저장</button>
				<button type="button" class="btn btn-secondary" onclick="resetForm();">새로 입력</button>
			</div>
			<button type="button" class="btn btn-danger" onclick="deletePatient();">삭제</button>
		</div>
	</form>
</div>
<div class="modal fade" id="queModal" data-backdrop="static" data-keyboard="false" tabindex="-1">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="queModalLabel">문진표</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form name="questionnaireForm">
					<input type="hidden" name="ptNum" />
					<div class="row g-2">
						<div class="form-group col-sm-6">
							<label class="form-label">내원 이유</label>
							<input type="text" class="form-control" name="queReason" />
						</div>
						<div class="form-group col-sm-6">
							<label class="form-label">희망 치료 내용</label>
							<input type="text" class="form-control" name="queWant" />
						</div>
					</div>
					<div class="form-group">
						<label class="form-label">복용 약</label>
						<input type="text" class="form-control" name="quePharm" />
					</div>
					<div>
						<div class="row">
							<div class="form-group col-sm-4">
								<label class="form-label">1.항혈전제 복용</label>
								<input type="checkbox" name="conList[0].conNm" value="항혈전제 복용" />
								<input type="text" class="uConditionType" name="conList[0].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">2.위장장애</label>
								<input type="checkbox" name="conList[1].conNm" value="위장장애" />
								<input type="text" class="uConditionType" name="conList[1].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">3.고혈압</label>
								<input type="checkbox" name="conList[2].conNm" value="고혈압" />
								<input type="text" class="uConditionType" name="conList[2].conDet" disabled />
							</div>
						</div>
						<div class="row">
							<div class="form-group col-sm-4">
								<label class="form-label">4.당뇨병</label>
								<input type="checkbox" name="conList[3].conNm" value="당뇨병" />
								<input type="text" class="uConditionType" name="conList[3].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">5.간염</label>
								<input type="checkbox" name="conList[4].conNm" value="간염" />
								<input type="text" class="uConditionType" name="conList[4].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">6.결핵</label>
								<input type="checkbox" name="conList[5].conNm" value="결핵" />
								<input type="text" class="uConditionType" name="conList[5].conDet" disabled />
							</div>
						</div>
						<div class="row">
							<div class="form-group col-sm-4">
								<label class="form-label">7.페니실린 알러지</label>
								<input type="checkbox" name="conList[6].conNm" value="페니실린 알러지" />
								<input type="text" class="uConditionType" name="conList[6].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">8.감염성</label>
								<input type="checkbox" name="conList[7].conNm" value="감염성" />
								<input type="text" class="uConditionType" name="conList[7].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">9.내심막염</label>
								<input type="checkbox" name="conList[8].conNm" value="내심막염" />
								<input type="text" class="uConditionType" name="conList[8].conDet" disabled />
							</div>
						</div>
						<div class="row">
							<div class="form-group col-sm-4">
								<label class="form-label">10.뇌혈관질환</label>
								<input type="checkbox" name="conList[9].conNm" value="뇌혈관질환" />
								<input type="text" class="uConditionType" name="conList[9].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">11.심장질환</label>
								<input type="checkbox" name="conList[10].conNm" value="심장질환" />
								<input type="text" class="uConditionType" name="conList[10].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">12.만성 신부전(혈액투석)</label>
								<input type="checkbox" name="conList[11].conNm" value="만성 신부전(혈액투석)" />
								<input type="text" class="uConditionType" name="conList[11].conDet" disabled />
							</div>
						</div>
						<div class="row">
							<div class="form-group col-sm-4">
								<label class="form-label">13.만성간경화</label>
								<input type="checkbox" name="conList[12].conNm" value="만성간경화" />
								<input type="text" class="uConditionType" name="conList[12].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">14.천식</label>
								<input type="checkbox" name="conList[13].conNm" value="천식" />
								<input type="text" class="uConditionType" name="conList[13].conDet" disabled />
							</div>
							<div class="form-group col-sm-4">
								<label class="form-label">15.기타</label>
								<input type="checkbox" name="conList[14].conNm" value="기타" />
								<input type="text" class="uConditionType" name="conList[14].conDet" disabled />
							</div>
						</div>
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success" onclick="insertQue();">저장</button>
				<button type="button" class="btn btn-secondary" data-dismiss="modal">닫기</button>
			</div>
		</div>
	</div>
</div>
<script>

// 주민등록번호를 모두 입력하면 생년월일과 성별이 자동으로 설정된다.
$('input[name=ptRrno1], input[name=ptRrno2]').on('blur', function(e){
	
	if(document.patientForm.ptRrno1.value == '' || document.patientForm.ptRrno2.value == ''){
		return;
	}
	
	setFromRrno();
});

// 주민등록번호를 통해 생년월일과 성별을 설정한다.
function setFromRrno(){
	
	const rrno = document.patientForm.ptRrno1.value + document.patientForm.ptRrno2.value;
	let birNum = rrno.substring(0, 6);
	const genNum = rrno.substring(6, 7);
	
	let gen = '';
	switch(genNum){
	case '1':
		birNum = '19' + birNum;
		gen = 'M';
		break;
	case '2':
		birNum = '19' + birNum;
		gen = 'W';
		break;
	case '3':
		birNum = '20' + birNum;
		gen = 'M';
		break;
	case '4':
		birNum = '20' + birNum;
		gen = 'W';
		break;
	}
	
	document.patientForm.ptBrdt.value = birNum;
	document.patientForm.ptGen.value = gen;
}

// 환자 검색란에 값 입력 시 드롭박스 메뉴가 열린다.
$('#ptSearch').on('keyup', function(e){
	$(this).dropdown('toggle');
});

// 환자 검색란을 떠나면 드롭박스 메뉴가 닫힌다.
$('#ptSearch').on('blur', function(e){
	if($('#ptSearchDropdown').hasClass('show')){
		$('#ptSearchDropdown').removeClass('show');
	}
});

// 환자 검색란에 키워드 입력 시 환자를 검색한다.
function searchPatient(target){
	const keyword = target.value;
	
	if(keyword.trim() == '') return false;
	
	fetch('/hospital/desk/searchPatient?keyword=' + keyword)
		.then(res => res.json())
		.then(ptList => {
			
			let dropdownItems = '';
			ptList.forEach(function(pt){
				dropdownItems += '<li class="dropdown-item" data-value="' + pt.ptNum + '" onmousedown="selectPt(this);">' + pt.ptNm + '(' + pt.ptNum + ')' + '</li>';
			});
			
			document.querySelector('#ptSearchDropdown').innerHTML = dropdownItems;
		});
}

//환자 검색란에서 환자를 찾아 선택 시 환자 데이터가 폼에 입력된다.
function selectPt(target){
	const ptNum = target.dataset.value;
	document.querySelector('#ptSearch').value = target.textContent;
	fetch('/hospital/desk/selectPatient?ptNum=' + ptNum)
		.then(res => res.json())
		.then(ptInfo => {
			
			document.patientForm.ptNum.value = ptInfo.ptNum;
			document.patientForm.ptNm.value = ptInfo.ptNm;
			document.patientForm.ptBrdt.value = ptInfo.ptBrdt;
			document.patientForm.ptRrno1.value = ptInfo.ptRrno.substring(0, 6);
			document.patientForm.ptRrno2.value = ptInfo.ptRrno.substring(6);
			document.patientForm.ptGen.value = ptInfo.ptGen;
			document.patientForm.ptPhone.value = ptInfo.ptPhone;
			document.patientForm.ptZip.value = ptInfo.ptZip;
			document.patientForm.ptAddr.value = ptInfo.ptAddr;
			document.patientForm.ptAddrDet.value = ptInfo.ptAddrDet;
			document.patientForm.ptMemo.value = ptInfo.ptMemo;
			
			if(ptInfo.prvcPvsnAgreYn == 'Y'){
				document.patientForm.prvcPvsnAgreYn.checked = true;
			}
			if(ptInfo.smsRcptnAgreYn == 'Y'){
				document.patientForm.smsRcptnAgreYn.checked = true;
			}
			if(ptInfo.ptMrsaYn == 'Y'){
				document.patientForm.ptMrsaYn.checked = true;
			}
			if(ptInfo.ptPregYn == 'Y'){
				document.patientForm.ptPregYn.checked = true;
			}
			
			document.questionnaireForm.ptNum.value = ptInfo.ptNum;
			document.patientForm.action = '/hospital/desk/updatePatient';
			
			document.querySelector('#openQuesBtn').disabled = false;
			document.questionnaireForm.action = '/hospital/desk/updateQue';
			
			setMedicalAlert(ptInfo.queInfo.uConList);
		});
}

//Medical Alert 설정
function setMedicalAlert(uConList){
	
	let mAlert = '';
	uConList.forEach(function(ucon, i){
		if(i > 0) mAlert += ', ';
		mAlert += ucon.conNm + '(' + ucon.conDet + ')';
	});
	
	document.querySelector('#medicalAlerts').value = mAlert;
}

// 입력란 유효성 검사
function checkPatientFormValid(){
	
	let alertContent = '';
	
	if(document.patientForm.ptNm.value.trim() == ''){
		alertContent = '환자 이름을 입력해주세요.';
	} else if(document.patientForm.ptRrno1.value.trim() == '' ||
			   document.patientForm.ptRrno2.value.trim() == ''){
		alertContent = '주민등록번호를 입력해주세요.';
	} else if(document.patientForm.ptPhone.value.trim() == ''){
		alertContent = '환자 연락처를 입력해주세요.';
	} else if(document.patientForm.ptZip.value.trim() == '' ||
			   document.patientForm.ptAddr.value.trim() == ''){
		alertContent = '환자 주소를 입력해주세요.';
	} else if(!document.patientForm.prvcPvsnAgreYn.checked){
		alertContent = '환자 등록을 위해서는 개인정보 제공에 동의해야 합니다.';
	}
	
	if (alertContent != ''){
		Swal.fire({
			icon: 'error',
			title: alertContent,
			confirmButtonText: '확인'
		});
		
		return false;
	}
	
	return true;
}

// 새 환자를 등록한다.
function insertPatient(){
	
	if(!checkPatientFormValid()) return false;
	
	const csrfToken = $('#_csrfToken').val();
	const actionPath = document.patientForm.action;
	const patientFormData = new FormData(document.patientForm);
	patientFormData.append('ptRrno', document.patientForm.ptRrno1.value + document.patientForm.ptRrno2.value)
	
	fetch(actionPath + '?_csrf=' + csrfToken, {
		method: 'post',
		body : patientFormData
	})
		.then(res => res.text())
		.then(text => {
			
			if(text == 'FAILED'){
				errorAlert();
				return;
			}
			
			if(text == 'UPDATE'){
				const Toast = Swal.mixin({
					toast: true,
					position: 'top',
					showConfirmButton: false,
					timer: 3000
				}).fire({
					icon: 'success',
					title: '환자 정보가 수정되었습니다.'
				});
				document.querySelector('#ptSearch').value = document.patientForm.ptNm.value + '(' + document.patientForm.ptNum.value + ')';
				document.querySelector('#ptSearchDropdown').innerHTML = '';
				return;
			}
			
			// 서버로부터 반환받은 값이 환자 번호일 경우
			document.patientForm.ptNum.value = text;
			document.querySelector('#ptSearch').value = document.patientForm.ptNm.value + '(' + text + ')';
			
			alertQue('환자 등록이 완료되었습니다.');
// 			document.patientForm.reset();
		});
}

// 문진표 경고창 출력
function alertQue(title){
	
	Swal.fire({
		title: title,
		text: '문진표를 작성하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '작성',
		denyButtonText: '닫기',
	}).then((result) => {
		if (result.isConfirmed) {
			selectPtQue();
		} else if (result.isDenied){
			Swal.fire({
				icon: 'info',
				title: '문진표 작성 필요',
				html: '정상적인 진료를 위해<br>반드시 문진표를 작성해주시길 바랍니다.',
				confirmButtonText: '확인'
			});
		}
	});
	
}


// 환자를 삭제한다.
function deletePatient(){
	
	const csrfToken = $('#_csrfToken').val();
	const ptNum = document.patientForm.ptNum.value;
	
	fetch('/hospital/desk/deletePatient', {
		method: 'post',
		headers: {
			'X-CSRF-TOKEN' : csrfToken
		},
		body: ptNum
	})
		.then(res => res.text())
		.then(text => {
			
			if(text == 'SUCCESS'){
				Swal.fire({
					icon: 'success',
					title: '환자 정보가 삭제되었습니다.',
					confirmButtonText: '확인'
				});
				resetForm();
			} else if(text == 'DENIED'){
				Swal.fire({
					icon: 'error',
					title: '진료 내역이 있는 환자는 삭제할 수 없습니다.',
					confirmButtonText: '확인'
				});
			} else if(text == 'FAILED'){
				errorAlert();
			}
			
		});
}

// 에러 알림창 출력
function errorAlert(){
	Swal.fire({
		icon: 'error',
		title: '에러가 발생했습니다.',
		text: '잠시 후 다시 시도해주세요.',
		confirmButtonText: '확인'
	});
}

//전체 폼을 초기화한다.
function resetForm(){
	document.querySelector('#ptSearch').value = '';
	document.querySelector('#ptSearchDropdown').innerHTML = '';
	document.patientForm.reset();
	document.patientForm.action = '/hospital/desk/insertPatient';
	
	document.querySelector('#openQuesBtn').disabled = true;
	document.questionnaireForm.action = '/hospital/desk/insertQue';
}

// 체크박스 체크 시 disabled 설정/해제
$('input:checkbox', questionnaireForm).on('change', function(){
	if($(this).is(':checked')){
		$(this).next().attr('disabled', false);
	} else {
		$(this).next().attr('disabled', true);
	}
});

// 문진표와 기저질환 등록
function insertQue(){
	
	const csrfToken = $('#_csrfToken').val();
	const actionPath = document.questionnaireForm.action;
	const queFormData = new FormData(document.questionnaireForm);
	
	fetch(actionPath + '?_csrf=' + csrfToken, {
		method: 'post',
		body: queFormData
	})
		.then(res => res.text())
		.then(text => {
			
			if (text == 'FAILED') {
				errorAlert();
				return;
			}
			
			let titleContent = '';
			if(text == 'INSERT'){
				titleContent = '문진표가 저장되었습니다.';
			} else if (text == 'UPDATE') {
				titleContent = '문진표가 수정되었습니다.';
			}
			
			const Toast = Swal.mixin({
				toast: true,
				position: 'top',
				showConfirmButton: false,
				timer: 3000
			}).fire({
				icon: 'success',
				title: titleContent
			});
			
			$('#queModal').modal('hide');
			document.questionnaireForm.reset();
			$('.uConditionType').attr('disabled', true);
		});
}

// 환자의 문진표를 가져오고 모달 출력
function selectPtQue(){
	const ptNum = document.patientForm.ptNum.value;
	
	fetch('/hospital/desk/selectPtQue?ptNum=' + ptNum)
		.then(res => res.json())
		.then(queInfo => {
			
			if(queInfo != null) {
				document.questionnaireForm.queReason.value = queInfo.queReason;
				document.questionnaireForm.queWant.value = queInfo.queWant;
				document.questionnaireForm.quePharm.value = queInfo.quePharm;
				
				queInfo.uConList.forEach(function(ucon){
					$('input:checkbox[value="' + ucon.conNm + '"]').prop('checked', true);
					$('input:checkbox[value="' + ucon.conNm + '"]').next().attr('disabled', false);
					$('input:checkbox[value="' + ucon.conNm + '"]').next().val(ucon.conDet);
				});
			}
		});
	
	$('#queModal').modal('show');
}

</script>
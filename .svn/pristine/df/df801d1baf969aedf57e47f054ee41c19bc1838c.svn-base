<%@ page language="java" contentType="text/html; charset=UTF-8" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<style>
.overflow-auto::-webkit-scrollbar{
	width: 8px;
	height: 8px;
}
.overflow-auto::-webkit-scrollbar-thumb{
    background-color: #404b57;
    border-radius: 5px;
}
.overflow-auto::-webkit-scrollbar-track{
    background-color: rgba(0,0,0,0);
}
.crmMenu a{
	font-family: 'Noto Sans KR', sans-serif;
	color: white;
}
.text-truncate{
	max-width: 200px;
	border-top: none !important;
}
.smsHistRow{
	cursor: pointer;
}
</style>
<div class="content-wrapper" style="background-color: #657D96;">
	<!-- main 검색창을 포함한 navbar 시작-->
	<nav class="navbar navbar-expand navbar-white navbar-light" style="background-color: #404b57;">
		<div class="input-group" style="width: 400px;">
			<input type="text" class="form-control" id="ptSearch" placeholder="환자 검색">
			<div class="input-group-append">
				<button type="button" id="ptSearchBtn" class="btn btn-outline-secondary" onclick="searchPtOnCrmList();">검색</button>
			</div>
		</div>
		<img src="/resources/images/layout/memo_icon.png" alt="메모" id="memo" class="brand-image elevation-1" style="margin-left: 15px;">
		<ul class="navbar-nav ml-auto">
		</ul>
		<div class="crmMenu d-flex justify-content-around" style="width: 50%; min-width: 600px;">
			<a href="#" onclick="changeMenu('crmNeedList');">CRM 내역</a>
			<a href="#" onclick="changeMenu('crmTargetList');">CRM 대상 검색</a>
			<a href="#" onclick="changeMenu('smsHistList');">SMS 발송 내역</a>
			<a href="#">공지사항 관리</a>
			<a href="#">문의게시판 관리</a>
		</div>
	</nav>
	
	<section class="content" style="margin-top: 1%;">
		<div class="row" style="height: 900px;">
			<!-- CRM 내역 시작 -->
			<div id="crmNeedList" class="col-md-8 menuDiv">
				<div class="card card-info" style="height: 68%;">
					<div class="navbar card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 class="m-0">CRM 내역</h4>
						</div>
						<ul class="navbar-nav ml-auto"></ul>
						<div class="d-flex justify-content-around" style="width: 50%; min-width: 260px;">
							<a href="#" onclick="addToSendListFromCrmList();">목록에 추가</a>
							<a href="#" onclick="completeCrm();">처리완료</a>
							<a href="#" onclick="uncompleteCrm();">처리완료 취소</a>
							<a href="#" onclick="deleteCrm();">삭제</a>
						</div>
					</div>
					<div class="card-body overflow-auto p-0">
						<table class="table table-hover text-center">
							<thead class="sticky-top bg-white">
								<tr>
									<th></th>
									<th>환자명(차트번호)</th>
									<th>처리상태</th>
									<th>CRM사유</th>
									<th>다음예약일시</th>
									<th>CRM예정일</th>
									<th>CRM처리일</th>
								</tr>
							</thead>
							<tbody id="crmNeedListBody"></tbody>
						</table>
					</div>
				</div>
				<div class="card card-info" style="height: 28%;">
					<div class="card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 class="m-0">SMS 템플릿</h4>
						</div>
					</div>
					<div class="card-body p-0">
						<div class="row h-100">
							<div class="col-md-2 h-100">
								<table class="table table-bordered text-center p-0 m-0" style="height: 90%;">
									<tr>
										<td class="p-0 dropright">
											<a href="#" class="dropdown-item dropdown-toggle p-0 h-100 d-flex justify-content-center align-items-center" data-toggle="dropdown">예약</a>
											<div class="dropdown-menu">
												<button type="button" class="dropdown-item">예약 일자 안내</button>
												<button type="button" class="dropdown-item">예약 미이행</button>
											</div>
										</td>
									</tr>
									<tr>
										<td class="p-0 dropright">
											<a href="#" class="dropdown-item dropdown-toggle p-0 h-100 d-flex justify-content-center align-items-center" data-toggle="dropdown">안내</a>
											<div class="dropdown-menu">
												<button type="button" class="dropdown-item">주의사항 안내</button>
												<button type="button" class="dropdown-item">리콜환자 안내</button>
												<button type="button" class="dropdown-item">병원 안내</button>
											</div>
										</td>
									</tr>
									<tr>
										<td class="p-0 dropright">
											<a href="#" class="dropdown-item dropdown-toggle p-0 h-100 d-flex justify-content-center align-items-center" data-toggle="dropdown">인사</a>
											<div class="dropdown-menu">
												<button type="button" class="dropdown-item">감사 인사</button>
												<button type="button" class="dropdown-item">기념일 인사</button>
												<button type="button" class="dropdown-item">명절 인사</button>
											</div>
										</td>
									</tr>
									<tr>
										<td class="p-0">
											<button class="dropdown-item p-0 h-100 d-flex justify-content-center align-items-center">기타</button>
										</td>
									</tr>
								</table>
							</div>
							<div class="col-md-10">
								
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- CRM 내역 끝 -->
			<!-- CRM 대상 검색 시작 -->
			<div id="crmTargetList" class="col-md-8 menuDiv d-none">
				<div class="card card-info" style="height: 97.67%;">
					<div class="navbar card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 class="m-0">CRM 대상 검색</h4>
						</div>
						<ul class="navbar-nav ml-auto"></ul>
						<div class="d-flex justify-content-around" style="width: 180px;">
							<a href="#" onclick="addToSendListFromTargetList();">목록에 추가</a>
							<a href="#">초기화</a>
						</div>
					</div>
					<div class="card-body overflow-auto p-0">
						<table class="table table-hover text-center">
							<thead class="sticky-top bg-white">
								<tr>
									<th></th>
									<th>환자명</th>
									<th>차트번호</th>
									<th>최근진료일자</th>
									<th>다음예약일시</th>
									<th>연락처</th>
								</tr>
							</thead>
							<tbody id="crmTargetListBody">
								<tr>
									<td colspan="6">환자를 검색해주세요.</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
			<!-- CRM 대상 검색 끝 -->
			<!-- SMS 발송 내역 시작 -->
			<div id="smsHistList" class="col-md-8 menuDiv d-none">
				<div class="card card-info" style="height: 97.67%;">
					<div class="navbar card-header" style="background-color: #404b57;">
						<div class="card-title">
							<h4 class="m-0">SMS 발송 내역</h4>
						</div>
					</div>
					<div class="card-body overflow-auto p-0">
						<table class="table table-hover text-center">
							<thead class="sticky-top bg-white">
								<tr>
									<th style="width: 15%;">환자명</th>
									<th style="width: 15%;">차트번호</th>
									<th style="width: 20%;">연락처</th>
									<th style="width: 30%;">내용</th>
									<th style="width: 20%;">발송일자</th>
								</tr>
							</thead>
							<tbody id="smsHistListBody"></tbody>
						</table>
					</div>
				</div>
			</div>
			<!-- CRM 발송 내역 끝 -->
			<div class="col-md-4">
				<div class="card" style="height: 97.67%;">
					<div class="card-body">
						<div style="height: 60%;">
							<div class="border p-4 h-100 w-100">
								<div class="h-100 w-100 py-4 bg-black" style="border: 5px solid black; border-radius: 2rem;">
									<div class="position-relative" style="width: 25%; top: -10px; left: 37.5%; border: 3px solid grey; border-radius: 1rem;"></div>
									<div class="h-100 w-100 bg-white d-flex justify-content-center align-items-center" style="border: 5px solid black; border-radius: 2rem;">
										<textarea id="smsContentTextarea" style="width: 70%; height: 80%;"></textarea>
									</div>
								</div>
							</div>
						</div>
						<div class="overflow-auto my-4 p-0" style="height: 30%;">
							<table class="table table-bordered text-center w-100">
								<thead class="sticky-top bg-white" style="top: -1px;">
									<tr>
										<th style="width: 35%;">이름</th>
										<th style="width: 50%;">번호</th>
										<th style="width: 15%;"></th>
									</tr>
								</thead>
								<tbody id="smsTargetListBody"></tbody>
							</table>
						</div>
						<div class="text-right">
							<button type="button" id="smsSendBtn" class="btn btn-primary"
									style="background-color: #904aff; border: #904aff;" onclick="sendSmsOnCrm();">전송</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</div>
<script>

searchPtOnCrmList();

// 수신자 목록의 x 버튼을 클릭하면 목록에서 삭제
$(document).on('click', '.SmsRowDeleteBtn', function(e){
	$(this).parents('tr').remove();
});


// CRM 내역에서 목록에 추가 버튼을 클릭하면 체크박스를 선택한 환자가 수신자 목록에 추가됨
function addToSendListFromCrmList(){
	
	const ptCrmRow = $('.ptCrmRow');
	
	let code = '';
	ptCrmRow.each(function(idx, ptCrm){
		
		let crmCheckBox = ptCrm.querySelector('.crmCheckBox');
		if(crmCheckBox.checked){
			
			const crmCrmNum = ptCrm.dataset.crmnum;
			
			const ptNm = ptCrm.childNodes[1].textContent;
			const crmPtNm = ptNm.substring(0, ptNm.indexOf('('));
			
			const crmPtPhone = ptCrm.dataset.ptphone;
			
			code += '<tr>';
			code += '<td class="crmCrmNum" data-crmnum="' + crmCrmNum + '">' + crmPtNm + '</td>';
			code += '<td>' + crmPtPhone + '</td>';
			code += '<td><button type="button" class="btn btn-light p-0 btn-block SmsRowDeleteBtn">&times;</button></td>';
			code += '</tr>';
			
			crmCheckBox.checked = false;
		}
	});
	
	document.querySelector('#smsTargetListBody').insertAdjacentHTML('beforeEnd', code);
}

// CRM 대상 검색에서 목록에 추가 버튼을 클릭하면 체크박스를 선택한 환자가 수신자 목록에 추가됨
function addToSendListFromTargetList(){
	
	const ptTargetRow = $('.ptTargetRow');
	
	let code = '';
	ptTargetRow.each(function(idx, ptTarget){
		
		let targetCheckBox = ptTarget.querySelector('.targetCheckBox')
		if(targetCheckBox.checked){
			
			console.log(ptTarget.dataset.ptnum);
			console.log(ptTarget.childNodes[1]);
			console.log(ptTarget.childNodes[5]);
			const targetPtNum = ptTarget.dataset.ptnum;
			const targetPtNm = ptTarget.childNodes[1].textContent;
			const targetPtPhone = ptTarget.childNodes[5].textContent;
			
			code += '<tr>';
			code += '<td class="targetPtNum" data-ptnum="' + targetPtNum + '">' + targetPtNm + '</td>';
			code += '<td>' + targetPtPhone + '</td>';
			code += '<td><button type="button" class="btn btn-light p-0 btn-block SmsRowDeleteBtn">&times;</button></td>';
			code += '</tr>';
			
			targetCheckBox.checked = false;
		}
	});
	
	document.querySelector('#smsTargetListBody').insertAdjacentHTML('beforeEnd', code);
	
}

// 네비게이션바의 메뉴를 클릭하면 메뉴 변경
function changeMenu(menuName){
	
	document.querySelectorAll('.menuDiv').forEach(function(div){
		div.classList.add('d-none');
	});
	
	document.querySelector('#' + menuName).classList.remove('d-none');
	const ptSearchBtn = document.querySelector('#ptSearchBtn');
	const smsSendBtn = document.querySelector('#smsSendBtn');
	
	switch(menuName){
	case 'crmNeedList':
		ptSearchBtn.onclick = searchPtOnCrmList;
		smsSendBtn.onclick = sendSmsOnCrm;
		break;
	case 'crmTargetList':
		ptSearchBtn.onclick = searchPtOnTargetList;
		smsSendBtn.onclick = sendSmsOnTarget;
		break;
	case 'smsHistList':
		ptSearchBtn.onclick = searchPtOnTargetList;
		listSmsHist();
		break;
	}
}

// 환자 검색창에서 엔터 클릭 시 검색 실행
$('#ptSearch').on('keydown', function(e){
	if(e.keyCode == 13){
		document.querySelector('#ptSearchBtn').click();
	}
})

// 환자를 검색해 CRM 내역 목록에 출력한다.
function searchPtOnCrmList(){
	
	let keyword = document.querySelector('#ptSearch').value;
	keyword = keyword.trim();
	
	fetch('/hospital/sms/searchPtOnCrmList?keyword=' + keyword)
	.then(res => res.json())
	.then(crmList => {
		
		let code = '';
		crmList.forEach(function(crm){
			code += '<tr class="ptCrmRow" data-crmnum="' + crm.crmNum + '" data-ptphone="' + crm.ptPhone + '">';
			code += '<td><input type="checkbox" class="crmCheckBox" /></td>';
			code += '<td>' + (crm.ptNm + '(' + crm.ptNum + ')') + '</td>';
			code += '<td>' + crm.crmPrcsStatus + '</td>';
			code += '<td>' + crm.crmReason + '</td>';
			code += '<td>' + (crm.nxResvDt == null ? '-' : crm.nxResvDt) + '</td>';
			code += '<td>' + crm.eth + '</td>';
			code += '<td>' + (crm.prcsCmptnDt == null ? '-' : crm.prcsCmptnDt ) + '</td>';
			code += '</tr>';
			
		});
		
		if(code == ''){
			code += '<tr><td colspan="7">일치하는 환자가 존재하지 않습니다.</td></tr>';
		}
		
		document.querySelector('#crmNeedListBody').innerHTML = code;
	});
	
}

// 환자를 검색해 CRM 대상 검색 목록에 출력한다.
function searchPtOnTargetList(){
	
	let keyword = document.querySelector('#ptSearch').value;
	keyword = keyword.trim();
	
	if(keyword == '') return false;
	
	fetch('/hospital/sms/searchPtOnTargetList?keyword=' + keyword)
		.then(res => res.json())
		.then(ptList => {
			
			let code = '';
			ptList.forEach(function(pt){
				code += '<tr class="ptTargetRow" data-ptnum="' + pt.ptNum + '">'
				code += '<td><input type="checkbox" class="targetCheckBox" /></td>';
				code += '<td>' + pt.ptNm + '</td>'
				code += '<td>' + pt.ptNum + '</td>'
				code += '<td>' + (pt.recentCheckupDt == null ? '-' : pt.recentCheckupDt) + '</td>'
				code += '<td>' + (pt.nxResvDt == null ? '-' : pt.nxResvDt) + '</td>'
				code += '<td>' + pt.ptPhone + '</td>'
				code += '</tr>'
			})
			
			if(code == ''){
				code += '<tr><td colspan="6">일치하는 환자가 존재하지 않습니다.</td></tr>';
			}
			
			document.querySelector('#crmTargetListBody').innerHTML = code;
		});
	
}

// CRM 내역에서 SMS 전송
function sendSmsOnCrm(){
	
	if(isSmsFormEmpty()) return false;
	
	Swal.fire({
		title: '메시지를 전송하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			
			const smsContent = document.querySelector('#smsContentTextarea').value;
			const tdList = document.querySelectorAll('#smsTargetListBody .crmCrmNum');
			
			let crmNumList = [];
			tdList.forEach(function(td){
				const crmNum = td.dataset.crmnum;
				crmNumList.push(crmNum);
			});
			
			const csrfToken = $('#_csrfToken').val();
			fetch('/hospital/sms/sendSmsOnCrm', {
				method: 'post',
				headers: {
					'X-CSRF-TOKEN' : csrfToken,
					'Content-Type' : 'application/json;charset=utf-8'
				},
				body: JSON.stringify({
					'smsContent' : smsContent,
					'crmNumList' : crmNumList
				})
			})
				.then(res => res.text())
				.then(sendCount => {
					
					if(sendCount == 0){
						simpleJustErrorAlert();
						return false;
					}
					simpleSuccessAlert(sendCount + '건의 메시지가 발송되었습니다.');
					resetSmsForm();
				});
		}
	});
	
}

// CRM 대상 검색에서 SMS 전송
function sendSmsOnTarget(){
	
	if(isSmsFormEmpty()) return false;
	
	Swal.fire({
		title: '메시지를 전송하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			
			const smsContent = document.querySelector('#smsContentTextarea').value;
			const tdList = document.querySelectorAll('#smsTargetListBody .targetPtNum');
			
			let ptNumList = [];
			tdList.forEach(function(td){
				const ptNum = td.dataset.ptnum;
				ptNumList.push(ptNum);
			});
			
			const csrfToken = $('#_csrfToken').val();
			fetch('/hospital/sms/sendSmsOnTarget', {
				method: 'post',
				headers: {
					'X-CSRF-TOKEN' : csrfToken,
					'Content-Type' : 'application/json;charset=utf-8'
				},
				body: JSON.stringify({
					'smsContent' : smsContent,
					'ptNumList' : ptNumList
				})
			})
				.then(res => res.text())
				.then(sendCount => {
					
					if(sendCount == 0){
						simpleJustErrorAlert();
						return false;
					}
					simpleSuccessAlert(sendCount + '건의 메시지가 발송되었습니다.');
					resetSmsForm();
				});
		}
	});
	
}

// 메시지 내용과 메시지 수신자 목록이 비어있는지 확인
function isSmsFormEmpty(){
	
	const smsContent = document.querySelector('#smsContentTextarea').value;
	if(smsContent == ''){
		simpleErrorAlert('메시지 내용을 입력해주세요.');
		return true;
	}
	
	const smsTargetList = document.querySelector('#smsTargetListBody').innerHTML.trim();
	if(smsTargetList == ''){
		simpleErrorAlert('환자를 선택해주세요.');
		return true;
	}
	
	return false;
}

// SMS 전송 폼을 초기화
function resetSmsForm(){
	document.querySelector('#smsContentTextarea').value = '';
	document.querySelector('#smsTargetListBody').innerHTML = '';
}

// 선택된 CRM이 있는지 확인
function isCrmSelected(){
	
	const crmCheckBox = $('.crmCheckBox');
	let crmNumList = [];
	
	crmCheckBox.each(function(idx, checkBox){
		if(checkBox.checked){
			crmNumList.push($(checkBox).parents('tr').data('crmnum'));
		}
	});
	
	if(crmNumList.length == 0) {
		simpleErrorAlert('CRM을 선택해주세요.');
		return false;
	}
	
	return true;
}

// 선택된 CRM 목록에서 CRM 번호를 꺼내어 배열로 반환
function setCrmNumList(){
	
	const crmCheckBox = $('.crmCheckBox');
	let crmNumList = [];
	
	crmCheckBox.each(function(idx, checkBox){
		if(checkBox.checked){
			crmNumList.push($(checkBox).parents('tr').data('crmnum'));
		}
	});
	
	return crmNumList;
}

// 처리완료 상태의 CRM을 미완료 상태로 변경
function uncompleteCrm(){
	
	if(!isCrmSelected()) return false;
	
	Swal.fire({
		title: 'CRM을 미완료처리하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			
			let crmNumList = setCrmNumList();
			if(!isCrmAlreadyCompleted(crmNumList)){
				simpleErrorAlert('처리완료되지 않은 CRM은 변경할 수 없습니다.');
				return false;
			}
			
			const csrfToken = $('#_csrfToken').val();
			fetch('/hospital/sms/uncompleteCrm', {
				method: 'post',
				headers: {
					'X-CSRF-TOKEN' : csrfToken,
					'Content-Type' : 'application/json;charset=utf-8'
				},
				body : JSON.stringify(crmNumList)
			})
				.then(res => res.text())
				.then(uncompleteCount => {
					
					if(uncompleteCount == 0){
						simpleJustErrorAlert();
						return false;
					}
					
					simpleSuccessAlert(uncompleteCount + '건의 CRM이 미완료처리되었습니다.');
					searchPtOnCrmList();
					
				});
			
		}
	});
	
} 

// 선택된 CRM 목록 중 처리완료된 CRM이 존재하는지 확인
function isCrmAlreadyCompleted(crmNumList){
	
	for(crmNum of crmNumList){
		const crmStatus = document.querySelector('tr[data-crmnum="' + crmNum + '"]').childNodes[2].textContent;
		if(crmStatus === '처리완료'){
			return true;
		}
	}
	
	return false;
}

// 미완료 상태의 CRM을 처리완료로 변경
function completeCrm(){
	
	if(!isCrmSelected()) return false;
	
	Swal.fire({
		title: 'CRM을 완료처리하시겠습니까?',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			
			let crmNumList = setCrmNumList();
			if(isCrmAlreadyCompleted(crmNumList)){
				simpleErrorAlert('이미 처리완료된 CRM입니다.');
				return false;
			}
			
			const csrfToken = $('#_csrfToken').val();
			fetch('/hospital/sms/completeCrm', {
				method: 'post',
				headers: {
					'X-CSRF-TOKEN' : csrfToken,
					'Content-Type' : 'application/json;charset=utf-8'
				},
				body : JSON.stringify(crmNumList)
			})
				.then(res => res.text())
				.then(completeCount => {
					
					if(completeCount == 0){
						simpleJustErrorAlert();
						return false;
					}
					
					simpleSuccessAlert(completeCount + '건의 CRM이 완료처리되었습니다.');
					searchPtOnCrmList();
					
				});
			
		}
	});
}

// CRM 삭제
function deleteCrm(){
	
	if(!isCrmSelected()) return false;
	
	Swal.fire({
		title: 'CRM을 삭제하시겠습니까?',
		text: '삭제된 내용은 복구할 수 없습니다.',
		showDenyButton: true,
		confirmButtonText: '확인',
		denyButtonText: '취소',
	}).then(result => {
		if(result.isConfirmed){
			
			let crmNumList = setCrmNumList();
			
			const csrfToken = $('#_csrfToken').val();
			fetch('/hospital/sms/deleteCrm', {
				method: 'post',
				headers: {
					'X-CSRF-TOKEN' : csrfToken,
					'Content-Type' : 'application/json;charset=utf-8'
				},
				body: JSON.stringify(crmNumList)
			})
				.then(res => res.text())
				.then(deleteCount => {
					
					if(deleteCount == 0){
						simpleJustErrorAlert();
						return false;
					}
					
					simpleSuccessAlert(deleteCount + '건의 CRM이 삭제되었습니다.');
					searchPtOnCrmList();
				});
		}
	});
	
}

// SMS 발송 이력 목록을 클릭하면 발송 내용을 휴대폰 화면에 출력
$(document).on('click', '.smsHistRow', function(e){
	document.querySelector('#smsContentTextarea').value = $('.text-truncate', this).text();
});

// SMS 발송 이력 조회
function listSmsHist(){
	
	fetch('/hospital/sms/listSmsHist')
		.then(res => res.json())
		.then(smsHistList => {
			
			let code = '';
			smsHistList.forEach(function(smsHist){
				
				code += '<tr class="smsHistRow">';
				code += '<td>' + smsHist.ptNm + '</td>'
				code += '<td>' + smsHist.ptNum + '</td>'
				code += '<td>' + smsHist.ptPhone + '</td>'
				code += '<td><span class="d-inline-block text-truncate">' + smsHist.smsContent + '</span></td>'
				code += '<td>' + smsHist.smsDt + '</td>'
				code += '</tr>';
				
			});
			
			document.querySelector('#smsHistListBody').innerHTML = code;
			
		});
	
}
</script>
<script src="/resources/js/alertModule.js"></script>